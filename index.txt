Daniel Mozlin

Ppl who've directly inspired me:
Karan Kapur
Simon Jacobs
Dino Gidwani
Matt Wetty
Jan Verleur
Bob Wilson
Andrew Darqui

Reading List / Learning 
___________________________________________________________________________________________________________________________________________________________________________
Math Wave

Logic
- source: http://emilkirkegaard.dk/en/wp-content/uploads/Paul-Tomassi-Logic.pdf
- haskell: http://hackage.haskell.org/package/hatt
- sagemath: http://www.sagemath.org/pdf/en/reference/logic/logic.pdf , http://www.sagemath.org/doc/reference/logic/sage/logic/propcalc.html
- history:


Concrete Mathematics
- source: http://www.matematica.net/portal/e-books/Graham%20-%20Knuth%20-%20Patashnik%20-%20%20Concrete%20Mathematics.pdf
- history:


Conceptual Mathematics: A first introduction to Categories
- source: http://fef.ogu.edu.tr/matbil/eilgaz/kategori.pdf
- haskell: http://hackage.haskell.org/package/base-4.7.0.1/docs/Control-Category.html , https://hackage.haskell.org/package/categories , http://hackage.haskell.org/package/data-category-0.5.1.1/docs/Data-Category.html
- sage: http://www.sagemath.org/pdf/en/reference/categories/categories.pdf , http://www.sagemath.org/doc/reference/categories/
- history:


Mathematics For Computer Science
- source: http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2010/readings/MIT6_042JS10_notes.pdf
- history:


Holmes - Introduction to Set Theory
- source: http://math.boisestate.edu/~holmes/holmes/head.pdf
- haskell: https://downloads.haskell.org/~ghc/7.8.2/docs/html/libraries/containers-0.5.5.1/Data-Set.html
- sage: http://www.sagemath.org/doc/reference/structure/sage/sets/set.html
- https://github.com/adarqui/Daimyo/blob/master/Translation/Holmes/Holmes.hs
- history:


Elementary Number Theory (Using Sage)
- source: http://wstein.org/ent/ent.pdf
- haskell: https://hackage.haskell.org/package/arithmoi
- sage: http://www.sagemath.org/doc/tutorial/tour_numtheory.html
- history:


Elementary Probability Theory
- source: http://www.orianhealth.com/files/public-docs/Books/Math/UTM%20Chung%20K.L.%20Aitsahlia%20F.%20Elementary%20probability%20theory%20with%20stochastic%20processes%20and%20an%20introduction%20to%20mathematical%20finance%20(4ed%20Springer%202006).pdf
- haskell: http://hackage.haskell.org/package/probability
- sage: http://www.sagemath.org/pdf/en/reference/probability/probability.pdf, http://www.sagemath.org/doc/reference/probability/
- history:


Problem Solving Strategies
- source: http://micheleandreoli.org/public/Didattica/olimat/Libri/Engel_A._Problem-solving_strategies_for_math_olympiads__1998.pdf


Intro to Abstract Algebra
- source: http://www.math.umn.edu/~garrett/m/intro_algebra/notes.pdf
- haskell: https://hackage.haskell.org/package/algebra
- sage: http://abstract.ups.edu/download/aata-20111223-sage-4.8.pdf , http://www.sagemath.org/doc/prep/Quickstarts/Abstract-Algebra.html
- history:


Linear Algebra: Theory and Applications
- source: http://www.math.byu.edu/klkuttle/linearalgebra.pdf
- haskell: https://hackage.haskell.org/package/linear
- sage: http://linear.ups.edu/download/fcla-2.22-sage-4.7.1-preview.pdf , http://www.sagemath.org/doc/constructions/linear_algebra.html
- history:


Introduction to Differential Equations
- source: http://www.math.ust.hk/~machas/differential-equations.pdf
- haskell:
- sage: http://wdjoyner.com/teach/DiffyQ/des-book.pdf , http://www.sagemath.org/doc/reference/calculus/sage/calculus/desolvers.html
- history:


Introduction to Higher Mathematics
- source: http://www.math.buffalo.edu/~reineck/introhighermath.pdf
- history:


Introduction to Toplogy
- source: http://www.math.colostate.edu/~renzo/teaching/Topology10/Notes.pdf
- history:


Group Theory
- source: http://www.jmilne.org/math/CourseNotes/GT.pdf
- haskell: https://hackage.haskell.org/package/groups-0.3.0.0/docs/Data-Group.html , https://hackage.haskell.org/package/glpk-hs-0.3.4/docs/Data-Algebra.html
- sage: http://www.wdjoyner.org/papers/groups-sage4.pdf , http://www.sagemath.org/doc/reference/categories/sage/categories/groups.html
- history:


An Introduction to Geometry
- source: http://www.math.nus.edu.sg/~matwyl/Notes_MA2219.pdf
- haskell: https://hackage.haskell.org/package/hgeometry
- sage: 
- history:


Trigonometry
- source: http://mecmath.net/trig/trigbook.pdf
- haskell: 
- sage: http://www.sagemath.org/doc/reference/functions/sage/functions/trig.html
- history:


College Algebra
- source: http://www.math.missouri.edu/courses/math1100/CABook.pdf
- haskell:
- sage:
- history:


Understanding Basic Calculus
- source: http://www.mathdb.org/basic_calculus/BasicCalculus.pdf
- haskell:
- sage: http://www.uwosh.edu/facstaff/gutow/biophysical_chemistry/sage-summary-quick-reference-sheets/quickref-calc.pdf , http://www.sagemath.org/doc/constructions/calculus.html
- history:


An Introduction to Statistics
- source: https://www.artofproblemsolving.com/LaTeX/Examples/statistics_firstfive.pdf
- haskell: https://hackage.haskell.org/package/statistics
- sage: http://www.sagemath.org/doc/reference/stats/index.html
- History:


Combinatorics
- source: http://people.math.gatech.edu/~trotter/book.pdf
- haskell: https://hackage.haskell.org/package/combinat , haskell: https://hackage.haskell.org/package/arithmoi
- sage: http://www.math.washington.edu/~billey/colombia/sage.code/Algebraic%20Combinatorics%20Tutorial.pdf , http://www.sagemath.org/doc/reference/combinat/
- history:


An Eternal Golden Braid
- source: http://www.physixfan.com/wp-content/files/GEBen.pdf

************************************************************

Algorithms Wave

Pearls of functional algorithm design
- http://www.clyce.net/wp-content/uploads/2013/02/Pearls-of-Functional-Algorithm-Design.pdf


Discrete Mathematics using Haskell
- http://www.x.edu.uy/inet/Springer.pdf
- 11/14/2014: C1 (coding examples in haskell)
- 11/27/2014: C2 (coding examples in haskell)
- 12/01/2014: C3 (pending examples)


Algorithms - A Functional Approach
- http://00000books.googlecode.com/git/Programming/Algorithms..%20a%20functional%20programming%20approach%20(AW,%201999).pdf


The Algorithm Design Manual
- http://mimoza.marmara.edu.tr/~msakalli/cse706_12/SkienaTheAlgorithmDesignManual.pdf
- 10/31/2014: C1

**********************************************************

Sec Wave

An Introduction to Mathematical Cryptography
- http://www.orianhealth.com/files/public-docs/Books/Math/UTM%20An%20Introduction%20to%20Mathematical%20Cryptography%20(Undergraduate%20Texts%20in%20Mathematics)%20(Jeffrey%20Hoffstein_%20et%20al)%200387779930.pdf


The Art of Software Security Assessment
- https://leaksource.files.wordpress.com/2014/08/the-art-of-software-security-assessment.pdf

The Browser Hackerâ€™s Handbook

**********************************************************

Science Wave
Pending development

*********************************************************

Misc (to be sorted)

Learnyouahaskell
http://learnyouahaskell.com/chapters
history:
- 12/1/2014: C1
- 12/4/2014: C2
- 12/5/2014: C3



__________________________________________________________________________________

Learning methodology:

[23:18:17]  <@map>   the key tho for the wave is that everything feeds off each other.. i mean you can do it with topics that are unrelated but to me it's more of a 'sorting algorithm'
[23:18:20]  <@map>   basically
[23:18:36]  <@map>   you have all of this material, and, your 'comparison' or 'order' is stuff you know or can learn
[23:18:39]  <@map>   so
[23:18:47]  <@map>   you just keep going through all of the topics, 'sorting' by what you are learning/know
[23:18:55]  <@map>   and you just keep making passes on it


[23:19:56]  <@map>   human memoization
[23:20:16]  <@map>   if we don't retain or build an intuition for something, then we are just less efficient in general
[23:20:24]  <@map>   and it may take us double or worse, the time to do something
[23:20:45]  <@map>   so finding ways to truly retain/build intuition is just like memoization/dynamic programming

[23:21:06]  <@map>   THE KNOWLEDGE ALGORITHM
